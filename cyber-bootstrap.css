
/*

CyberBootstrap CSS
https://github.com/CyberGen49/cyber-bootstrap

*/

/* Include normalize.css to get all browsers on the same page */
@include https://necolas.github.io/normalize.css/8.0.1/normalize.css;

/* Add fonts */
@font-face {
    font-family: 'Material Icons Outlined';
    font-style: normal;
    font-weight: 400;
    src: url(https://bootstrap.simplecyber.org/fonts/MaterialIconsOutlined-Regular.otf) format('opentype');
}
@font-face {
    font-family: 'Material Icons';
    font-style: normal;
    font-weight: 400;
    src: url(https://bootstrap.simplecyber.org/fonts/MaterialIcons-Regular.ttf) format('truetype');
}
@font-face {
    font-family: 'Sora';
    font-style: normal;
    font-weight: 100 900;
    src: url(https://bootstrap.simplecyber.org/fonts/Sora-Variable.ttf) format('truetype');
}
@font-face {
    font-family: 'Quicksand';
    font-style: normal;
    font-weight: 100 900;
    src: url(https://bootstrap.simplecyber.org/fonts/Quicksand-Variable.ttf) format('truetype');
}
@font-face {
    font-family: 'Cascadia Code';
    font-style: normal;
    font-weight: 400;
    src: url(https://bootstrap.simplecyber.org/fonts/CascadiaCode.ttf) format('truetype');
}
@font-face {
    font-family: 'Cascadia Code';
    font-style: normal;
    font-weight: 700;
    src: url(https://bootstrap.simplecyber.org/fonts/CascadiaCode.ttf) format('truetype');
}
@font-face {
    font-family: 'Cascadia Code';
    font-style: italic;
    font-weight: 400;
    src: url(https://bootstrap.simplecyber.org/fonts/CascadiaCodeItalic.ttf) format('truetype');
}
@font-face {
    font-family: 'Cascadia Code';
    font-style: italic;
    font-weight: 700;
    src: url(https://bootstrap.simplecyber.org/fonts/CascadiaCodeItalic.ttf) format('truetype');
}

:root {
    /* Colours */
    --bgDD: #121314;
    --bgD: #1a1b1d;
    --bg: #202124;
    --bgL: #292a2e;
    --bgLL: #43444b;
    --bgLLL: #56575f;
    --bgfg: #73747c;
    --fgDDD: #898a92;
    --fgDD: #a7a8b1;
    --fgD: #d2d4e0;
    --fg: #fff;
    --fgError: #f87070;
    --fgWarning: #f8eb70;
    --fgSuccess: #87f870;
    --fgInfo: #70cdf8;
    --accFg: var(--bg);
    --acc: #6cc9ff;
    --accL: #a8dfff;
    --accLL: #ccecfd;
    --codeYellow: #fff897;
    --codePurple: #ae97ff;
    --codePink: #ff97bf;
    --codeBlue: #97e2ff;
    --codeGreen: #9aff97;
    --codeWhite: #fff;
    --codeMuted: #747da1;
    /* Fonts */
    --fontHeader: "Quicksand";
    --fontHeaderWeight: 600;
    --fontBody: "Sora";
    --fontCode: "Cascadia Code";
    --fontSize: 16px;
    --lineHeight: 1.5;
    --lineHeightHeader: 1.2;
    /* Sizing */
    --roundness: 8px;
}

/* Set some properties on all elements */
* {
    box-sizing: border-box;
    color: var(--fg);
    font-family: var(--fontBody), -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    font-size: var(--fontSize);
    line-height: var(--lineHeight);
    max-height: 999999px;
}
*:focus-visible {
    outline: 2px solid var(--accL);
}

/* Remove default body margin and set background colour */
body {
    margin: 0px;
    background: var(--bg);
}

/* Set up h1-h6 */
h1, h2, h3, h4, h5, h6 {
    margin: 0px;
    padding: 0px;
    margin-bottom: 0.3em;
    margin-top: 0.7em;
    font-family: var(--fontHeader);
    font-weight: var(--fontHeaderWeight);
    line-height: var(--lineHeightHeader);
}
h1 { font-size: 36px; color: var(--acc); }
h2 { font-size: 32px; color: var(--acc); }
h3 { font-size: 28px; color: var(--accL); }
h4 { font-size: 24px; color: var(--accLL); }
h5 { font-size: 20px; color: var(--accLL); }
h6 { font-size: 18px; color: var(--accLL); }
.title { text-align: center }
h1.title { font-size: 40px }
h2.title { font-size: 34px }
h3.title { font-size: 30px }
h4.title { font-size: 26px }
h5.title { font-size: 22px }
h6.title { font-size: 18px }

/* Set up paragraph elements */
p {
    margin: 0px;
    padding: 0px;
    margin-bottom: 0.5em;
    line-height: var(--lineHeight);
}

/* Set up ordered and unordered lists */
ul, ol {
    margin: 0px;
    margin-left: 30px;
    padding: 0px;
    margin-bottom: 10px;
}
li {
    line-height: var(--lineHeight);
}
ul ul,
ul ol,
ol ul,
ol ol {
    margin-bottom: 0px;
}

/* Set up anchors */
a {
    color: var(--acc);
    text-decoration: none;
    font-size: inherit;
}
.canHover a:hover {
    color: var(--fgD);
    text-decoration: underline;
}

/* Set up small text */
small {
    display: block;
    font-size: 14px;
    line-height: 1.2;
    color: var(--fgDD);
}
small * {
    font-size: inherit;
    line-height: inherit;
}
small b {
    color: inherit;
}

/* Allow span elements to inherit from their parent */
span {
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
}

/* Set up code blocks */
pre, code {
    background: var(--bgL);
    font-family: var(--fontCode), monospace;
    font-size: inherit;
    word-break: break-word;
}
code:not(pre code) {
    color: var(--fgD);
    padding: 2px 8px;
    border-radius: 6px;
}
pre {
    max-height: 600px;
    padding: 10px 15px;
    margin: 15px 0px;
    border-radius: var(--roundness);
    line-height: 120%;
    overflow: auto;
}

/* Set up Prism syntax highlighting */
.token.important,
.token.builtin,
.token.class-name,
.token.property {
    color: var(--codeBlue);
}
.token.function,
.token.attr-name,
.token.selector,
.token.inserted {
    color: var(--codeGreen);
}
.token.color,
.token.boolean,
.token.number,
.token.symbol,
.token.constant {
    color: var(--codePurple);
}
.token.string,
.token.char,
.token.regex,
.token.url,
.token.attr-value {
    color: var(--codeYellow);
}
.token.variable,
.token.punctuation {
    color: var(--codeWhite);
}
.token.keyword,
.token.operator,
.token.tag,
.token.entity,
.token.atrule,
.token.unit,
.token.interpolation-punctuation,
.token.deleted {
    color: var(--codePink);
}
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
    color: var(--codeMuted);
}
.token.important,
.token.bold {
    font-weight: bold;
}
.token.italic { font-style: italic }
.token.namespace { opacity: 0.6 }

/* Add bottom margin to form elements */
form {
    margin-bottom: 10px;
}

/* Set up text boxes */
.textbox {
    width: 100%;
    height: 45px;
    margin: 3px;
    padding: 8px 16px;
    background: var(--bgD);
    color: var(--fg);
    outline: none;
    border: none;
    border: 2px solid rgba(0, 0, 0, 0);
    border-radius: var(--roundness);
    transition: 0.1s ease-in-out;
}
.canHover .textbox:hover:not(:disabled):not(:focus) {
    border-color: var(--bgLL);
}
.textbox:focus:not(:disabled) {
    border-color: var(--acc);
}
.textbox.small {
    font-size: calc(var(--fontSize) - 2px);
    height: 36px;
    padding: 6px 12px;
}
.textbox.large {
    font-size: calc(var(--fontSize) + 2px);
    height: 52px;
    padding: 10px 20px;
}
textarea.textbox { height: auto; }
.textbox::-webkit-inner-spin-button { -webkit-appearance: none; }
.textbox:disabled {
    background: var(--bgL);
    pointer-events: none;
}
.textbox::placeholder {
    color: var(--fgDDD);
}

/* Set up textbox icons */
.textboxWrapper { position: relative }
.textboxWrapper::after {
    position: absolute;
    top: 10px;
    right: 0px;
    height: calc(100% - 20px);
    width: 45px;
    background: var(--bgD);
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 100%;
    color: var(--fgDD);
    font-family: "Material Icons Outlined";
    font-size: 22px;
    pointer-events: none;
}
.textboxWrapper.dropdown::after {
    content: "expand_more";
    font-size: 24px;
}
.textboxWrapper.date::after { content: "event" }

/* Set up buttons */
.btn,
button {
    border: none;
    background: none;
    padding: 0px;
    margin: 0px;
    text-align: left;
    text-decoration: none;
    cursor: default;
}
.btn {
    display: flex;
    align-items: center;
}
.btn,
button:not(.noStyle) {
    height: 40px;
    margin: 3px;
    padding: 2px 16px 0px 16px;
    background: var(--acc);
    color: var(--accFg);
    border-radius: var(--roundness);
    transition: 0.1s ease-in-out;
    user-select: none;
}
.btn.outline,
button.outline:not(.noStyle) {
    background: none;
    color: var(--acc);
    border: 2px solid var(--acc);
}
.btn.alt,
button.alt:not(.noStyle) {
    background: var(--bgLLL);
    color: var(--fg);
}
.btn.alt.outline,
button.alt.outline:not(.noStyle) {
    background: none;
    color: var(--fgD);
    border-color: var(--fgD);
}
.btn.small,
button.small {
    font-size: calc(var(--fontSize) - 2px);
    height: 34px;
    padding: 2px 12px 0px 12px;
}
.btn.large,
button.large {
    font-size: calc(var(--fontSize) + 2px);
    height: 46px;
    padding: 2px 20px 0px 20px;
}
.canHover .btn:hover:not(.disabled):not(:active),
.canHover button:hover:not(:disabled):not(:active):not(.noStyle) {
    background: var(--fgD);
    border-color: var(--fgD);
    color: var(--bg);
    text-decoration: none;
}
.canHover .btn:hover:not(.disabled):not(:active) *,
.canHover button:hover:not(:disabled):not(:active):not(.noStyle) * {
    color: var(--bg);
    text-decoration: none;
}
.btn:active:not(.disabled),
button:active:not(:disabled):not(.noStyle) {
    background: var(--fg);
    border-color: var(--fg);
    color: var(--bg);
    text-decoration: none;
}
.btn.disabled,
button:disabled:not(.noStyle) {
    background: var(--bgL);
    color: var(--fgDDD);
}

/* Set up radio buttons and checkboxes */
input[type="radio"],
input[type="checkbox"] {
    appearance: none;
    margin: 3px;
    font-family: "Material Icons";
    font-size: 1.6em;
    color: var(--fgDD);
    line-height: 1;
    flex-shrink: 0;
    transition: 0.1s ease-in-out;
}
input[type="radio"]:checked,
input[type="checkbox"]:checked {
    color: var(--acc);
}
input[type="radio"]::before { content: "radio_button_unchecked"; }
input[type="radio"]:checked::before { content: "radio_button_checked"; }
input[type="checkbox"]::before { content: "check_box_outline_blank"; }
input[type="checkbox"]:checked::before { content: "check_box"; }
label.selectOption {
    display: flex;
    align-items: center;
    padding: 5px 3px;
}
label.selectOption input[type="radio"],
label.selectOption input[type="checkbox"] {
    margin-top: 0;
    margin-right: 0.4em;
}
.canHover label.selectOption:hover > input[type="radio"],
.canHover label.selectOption:hover > input[type="checkbox"] {
    color: var(--fgD);
}
.canHover label.selectOption:hover > input[type="radio"]:checked,
.canHover label.selectOption:hover > input[type="checkbox"]:checked {
    color: var(--accL);
}

/* Set up custom dropdown menus */
.customDropdownHitArea {
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    z-index: 1000;
}
.customDropdown {
    position: absolute;
    max-height: 500px;
    padding: 4px;
    background: var(--bgL);
    border-radius: var(--roundness);
    box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    user-select: none;
    transition: 0.1s ease-in-out;
    opacity: 0;
    overflow: auto;
}
.customDropdown.visible { opacity: 1 }
.customDropdown .option {
    display: block;
    width: 100%;
    height: auto;
    margin: 0px;
    padding: 6px 12px;
    padding-bottom: 5px;
    color: var(--fg);
    text-align: left;
    background: rgba(0, 0, 0, 0);
    outline: none;
    border-radius: 8px;
    transition: 0.1s ease-in-out;
    overflow: hidden;
}
.canHover .customDropdown .option:hover:not(.selected):not(:disabled) {
    background: var(--bgLL);
    color: var(--fg);
}
.canHover .customDropdown .option.selected:hover:not(:disabled) {
    background: var(--accL);
}
.customDropdown .option:focus-visible:not(.selected):not(:disabled) {
    background: var(--bgLL);
}
.customDropdown .option:active {
    background: inherit;
    color: inherit;
}
.customDropdown .option.selected:focus-visible:not(:disabled) {
    background: var(--accL);
}
.customDropdown .option.selected:not(:disabled) {
    background: var(--acc);
    color: var(--accFg);
}
.customDropdown .option:disabled {
    color: var(--fgDDD);
}

/* Set up popups */
.popupCont {
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    padding: 10px;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    overflow: hidden;
    z-index: 10;
    opacity: 0;
    transition: 0.1s ease-in-out;
}
.popupCont.visible {
    opacity: 1;
}
.popup {
    position: relative;
    max-height: 100%;
    max-width: 700px;
    margin: auto;
    background: var(--bg);
    border-radius: 12px;
    transform: scale(0.9);
    transition: 0.1s ease-in-out;
}
.popupCont.visible .popup {
    opacity: 1;
    transform: none;
    box-shadow: 0px 5px 30px 5px rgba(0, 0, 0, 0.3);
}
.popup .titlebar {
    display: flex;
    align-items: center;
    padding: 15px 15px 10px 15px;
}
.popup .titlebar .title {
    flex-grow: 1;
    font-family: "Quicksand";
    font-size: 22px;
    font-weight: bold;
    line-height: 1;
    text-align: left;
}
.popup .titlebar .close {
    padding: 0px;
    margin-top: 2px;
    margin-left: 15px;
    font-family: "Material Icons Outlined";
    font-size: 26px;
    color: var(--fgDD);
    line-height: 1;
    transition: 0.1s ease-in-out;
}
.canHover .popup .titlebar .close:hover,
.popup .titlebar .close:focus-visible {
    color: var(--fg);
}
.popup .content {
    padding: 0px 15px 17px 15px;
}
.popup .content *:last-child {
    padding-bottom: 0px;
    margin-bottom: 0px;
}

/* Custom text highlight */
::selection {
    background: var(--bgLLL);
}

/* Custom scrollabrs */
::-webkit-scrollbar {
    width: 15px;
    height: 15px;
}
::-webkit-resizer {
    background: rgba(0, 0, 0, 0);
}
::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
}
::-webkit-scrollbar-thumb {
    background: var(--fgDD);
    border-radius: 100px;
    background-clip: padding-box;
    border: 6px solid rgba(0, 0, 0, 0);
}
.canHover ::-webkit-scrollbar-thumb:hover:not(:active) {
    background: var(--fg);
    background-clip: padding-box;
    border: 4px solid rgba(0, 0, 0, 0);
}
::-webkit-scrollbar-thumb:active {
    background: var(--acc);
    background-clip: padding-box;
    border: 4px solid rgba(0, 0, 0, 0);
}

/* Display classes */
.d-block { display: block }
.d-inlineBlock { display: inline-block }
.d-flex { display: flex }
.d-hidden { display: none }
.hideOverflow { overflow: hidden }
/* Position classes */
.p-relative { position: relative }
.p-absolute { position: absolute }
.p-fixed { position: fixed }
/* Text alignment classes */
.text-left { text-align: left }
.text-center { text-align: center }
.text-right { text-align: right }
/* Auto margin classes */
.margin-auto { margin: auto }
.margin-0-auto { margin: 0 auto }
/* Flex classes */
.flex-centerVertical { align-items: center }
.flex-centerHorizontal { justify-content: center }
.flex-grow { flex-grow: 1 }
.flex-noGrow { flex-grow: 0 }
.flex-shrink { flex-shrink: 1 }
.flex-noShrink { flex-shrink: 0 }
.flex-wrap { flex-wrap: wrap }
/* Transition classes */
.noTransitions { transition: none !important }
.transEaseIO100 { transition: 0.1s ease-in-out }
.transEaseIO200 { transition: 0.2s ease-in-out }
.transEaseIO300 { transition: 0.3s ease-in-out }
.transEaseIO400 { transition: 0.4s ease-in-out }
/* Container class */
.container {
    max-width: 900px;
    margin: 0 auto;
    padding: 20px;
}
/* Material Icons classes */
.materialIcon {
    font-family: "Material Icons";
    font-size: 24px;
    line-height: 1;
    color: var(--fg);
    user-select: none;
}
.materialIcon.outlined { font-family: "Material Icons Outlined" }

/* Adjust styling for devices with touch input */
@media (hover: none) and (pointer: coarse) {
    label.selectOption {
        padding: 8px 3px;
    }
    .customDropdown .option {
        padding: 10px 12px;
    }
}